package:
  name: http-log
  # TODO: take as arg or something
  version: 0.7.10
  description: Logs HTTP requests
  target-architecture: [all] # bails on a lot of them which aren't supported yet
  copyright:
    - paths: ["*"]
      licence: Apache-2.0

environment:
  contents:
    keyring:
      - https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
    repositories:
      # Since we build in Wolfi, we seem to need to _run_ in it too (ie use Wolfi in apko)
      # Note that we have to restrict archs to amd64 atm, this isn't a melange or apko thing, it's a wolfi thing: they just don't have APKs in their repo for arm64 (ie https://packages.wolfi.dev/os/aarch64/APKINDEX.tar.gz doesn't exist)
      - https://packages.wolfi.dev/os
    packages:
      - wolfi-base
      - build-base
      - go

pipeline:
  - name: Build
    runs: |
      # build, rather than install, to be able to control output dir
      # We use CGO, so that we get libc's sophisticated name resolution etc. This is basically pointless because we're in a container which won't have NIS/LDAP/etc set up, but maybe someone wants to mount that config in?
      # Since we use CGO, force gcc's ld, and tell it to statically link libc in, for ease of packaging in a container
      go build -o "${{targets.destdir}}/usr/bin/http-log" -a -ldflags "-w -linkmode external -extldflags '-static' -X 'github.com/mt-inside/http-log/pkg/build.Version="${{package.version}}"'" ./cmd/http-log
